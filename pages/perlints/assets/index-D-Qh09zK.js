var se=Object.defineProperty;var ne=(o,e,t)=>e in o?se(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var h=(o,e,t)=>ne(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();class vt{constructor(e=1335){h(this,"a",1664525);h(this,"c",1013904223);h(this,"m",2**32);this.seed=e}next(){return this.seed=(this.a*this.seed+this.c)%this.m,this.seed/this.m}}const q=class q{constructor(e=1335,t=2){h(this,"_perm",[...q._permutation,...q._permutation]);h(this,"smoothstepOrder");h(this,"_seed");h(this,"_random");this.smoothstepOrder=t,this._seed=e,this._random=new vt(this._seed),this.shufflePerm()}setSeed(e){e!==this._seed&&(this._seed=e,this._random=new vt(this._seed),this.shufflePerm())}getSeed(){return this._seed}shufflePerm(){const e=this._random,t=[...q._permutation];for(let s=t.length-1;s>0;s--){const n=Math.floor(e.next()*(s+1));[t[s],t[n]]=[t[n],t[s]]}this._perm=[...t,...t]}static _smoothstep(e,t=2){if(e>=1)return 1;if(e<=0)return 0;switch(t){case 0:return e;case 1:return e*e*(3-2*e);case 2:return e*e*e*(e*(e*6-15)+10);default:throw new Error(`Unsupport order: ${t}`)}}static _lerp(e,t,s){return t+e*(s-t)}static _computGradient1d(e,t){const s=e%q._gradient1d.length;return q._gradient1d[s]*t}static _computGradient2d(e,t,s){const n=e%q._gradient2d.length,r=q._gradient2d[n];return r[0]*t+r[1]*s}static _computGradient3d(e,t,s,n){const r=e%q._gradient3d.length,a=q._gradient3d[r];return a[0]*t+a[1]*s+a[2]*n}static _computGradient4d(e,t,s,n,r){const a=e%q._gradient4d.length,l=q._gradient4d[a];return l[0]*t+l[1]*s+l[2]*n+l[3]*r}noise1d(e){const t=q._smoothstep,s=q._computGradient1d,n=q._lerp,r=this.smoothstepOrder,a=this._perm,l=Math.floor(e),c=e-l,i=t(c,r),u=a[l%256],p=a[(l+1)%256],d=s(u,c),f=s(p,c-1);return n(i,d,f)}noise2d(e,t){const s=q._smoothstep,n=q._computGradient2d,r=q._lerp,a=this.smoothstepOrder,l=this._perm;let c=Math.floor(e);const i=e-c;let u=Math.floor(t);const p=t-u,d=s(i,a),f=s(p,a);c=c%256,u=u%256;const y=l[l[c]+u],m=l[l[c]+(u+1)],_=l[l[c+1]+u],g=l[l[c+1]+(u+1)],b=n(y,i,p),w=n(_,i-1,p),F=n(m,i,p-1),N=n(g,i-1,p-1);return r(f,r(d,b,w),r(d,F,N))}noise3d(e,t,s){const n=q._smoothstep,r=q._computGradient3d,a=q._lerp,l=this.smoothstepOrder,c=this._perm;let i=Math.floor(e);const u=e-i;let p=Math.floor(t);const d=t-p;let f=Math.floor(s);const y=s-f,m=n(u,l),_=n(d,l),g=n(y,l);i=i%256,p=p%256,f=f%256;const b=c[c[c[i]+p]+f],w=c[c[c[i]+p+1]+f],F=c[c[c[i]+p]+f+1],N=c[c[c[i]+p+1]+f+1],A=c[c[c[i+1]+p]+f],Z=c[c[c[i+1]+p+1]+f],S=c[c[c[i+1]+p]+f+1],D=c[c[c[i+1]+p+1]+f+1],I=r(b,u,d,y),T=r(F,u,d,y-1),k=r(w,u,d-1,y),Y=r(N,u,d-1,y-1),X=r(A,u-1,d,y),M=r(S,u-1,d,y-1),R=r(Z,u-1,d-1,y),$=r(D,u-1,d-1,y-1);return a(g,a(_,a(m,I,X),a(m,k,R)),a(_,a(m,T,M),a(m,Y,$)))}noise4d(e,t,s,n){const r=q._smoothstep,a=q._computGradient4d,l=q._lerp,c=this.smoothstepOrder,i=this._perm;let u=Math.floor(e);const p=e-u;let d=Math.floor(t);const f=t-d;let y=Math.floor(s);const m=s-y;let _=Math.floor(n);const g=n-_,b=r(p,c),w=r(f,c),F=r(m,c),N=r(g,c);u=u%256,d=d%256,y=y%256,_=_%256;const A=i[i[i[i[u]+d]+y]+_],Z=i[i[i[i[u]+d]+y]+_+1],S=i[i[i[i[u]+d]+y+1]+_],D=i[i[i[i[u]+d]+y+1]+_+1],I=i[i[i[i[u]+d+1]+y]+_],T=i[i[i[i[u]+d+1]+y]+_+1],k=i[i[i[i[u]+d+1]+y+1]+_],Y=i[i[i[i[u]+d+1]+y+1]+_+1],X=i[i[i[i[u+1]+d]+y]+_],M=i[i[i[i[u+1]+d]+y]+_+1],R=i[i[i[i[u+1]+d]+y+1]+_],$=i[i[i[i[u+1]+d]+y+1]+_+1],j=i[i[i[i[u+1]+d+1]+y]+_],It=i[i[i[i[u+1]+d+1]+y]+_+1],Tt=i[i[i[i[u+1]+d+1]+y+1]+_],kt=i[i[i[i[u+1]+d+1]+y+1]+_+1],Yt=a(A,p,f,m,g),Xt=a(Z,p,f,m,g-1),Mt=a(S,p,f,m-1,g),Rt=a(D,p,f,m-1,g-1),$t=a(I,p,f-1,m,g),Ot=a(T,p,f-1,m,g-1),Vt=a(k,p,f-1,m-1,g),Gt=a(Y,p,f-1,m-1,g-1),Ut=a(X,p-1,f,m,g),jt=a(M,p-1,f,m,g-1),Ht=a(R,p-1,f,m-1,g),Qt=a($,p-1,f,m-1,g-1),Kt=a(j,p-1,f-1,m,g),Jt=a(It,p-1,f-1,m,g-1),te=a(Tt,p-1,f-1,m-1,g),ee=a(kt,p-1,f-1,m-1,g-1);return l(N,l(F,l(w,l(b,Yt,Ut),l(b,$t,Kt)),l(w,l(b,Mt,Ht),l(b,Vt,te))),l(F,l(w,l(b,Xt,jt),l(b,Ot,Jt)),l(w,l(b,Rt,Qt),l(b,Gt,ee))))}fractalNoise1d(e,t={octaves:1,amplitude:1,persistence:1,frequency:{x:1},lacunarity:{x:1},offset:{x:0}}){const{octaves:s,amplitude:n,frequency:r,persistence:a,lacunarity:l,offset:c}=t;if(s<1)throw new Error("the octaves must greater than 1");let i=0,u=n,p=r.x,d=0;for(let f=0;f<s;f++){const y=(e+f*c.x)*p,m=this.noise1d(y);i+=m*u,d+=u,p*=l.x,u*=a}return i/d}fractalNoise2d(e,t,s={octaves:1,amplitude:1,persistence:1,frequency:{x:1,y:1},lacunarity:{x:1,y:1},offset:{x:0,y:0}}){const{octaves:n,amplitude:r,frequency:a,persistence:l,lacunarity:c,offset:i}=s;if(n<1)throw new Error("the octaves must greater than 1");let u=0,p=r,d=a.x,f=a.y,y=0;for(let m=0;m<n;m++){const _=(e+m*i.x)*d,g=(t+m*i.y)*f,b=this.noise2d(_,g);u+=b*p,y+=p,d*=c.x,f*=c.y,p*=l}return u/y}fractalNoise3d(e,t,s,n={octaves:1,amplitude:1,persistence:1,frequency:{x:1,y:1,z:1},lacunarity:{x:1,y:1,z:1},offset:{x:0,y:0,z:0}}){const{octaves:r,amplitude:a,frequency:l,persistence:c,lacunarity:i,offset:u}=n;if(r<1)throw new Error("the octaves must greater than 1");let p=0,d=a,f=l.x,y=l.y,m=l.z,_=0;for(let g=0;g<r;g++){const b=(e+g*u.x)*f,w=(t+g*u.y)*y,F=(s+g*u.z)*m,N=this.noise3d(b,w,F);p+=N*d,_+=d,f*=i.x,y*=i.y,m*=i.z,d*=c}return p/_}fractalNoise4d(e,t,s,n,r={octaves:1,amplitude:1,persistence:1,frequency:{x:1,y:1,z:1,w:1},lacunarity:{x:1,y:1,z:1,w:1},offset:{x:0,y:0,z:0,w:0}}){const{octaves:a,amplitude:l,frequency:c,persistence:i,lacunarity:u,offset:p}=r;if(a<1)throw new Error("the octaves must greater than 1");let d=0,f=l,y=c.x,m=c.y,_=c.z,g=c.w,b=0;for(let w=0;w<a;w++){const F=(e+w*p.x)*y,N=(t+w*p.y)*m,A=(s+w*p.z)*_,Z=(n+w*p.w)*g,S=this.noise4d(F,N,A,Z);d+=S*f,b+=f,y*=u.x,m*=u.y,_*=u.z,g*=u.w,f*=i}return d/b}};h(q,"_permutation",[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180]),h(q,"_gradient1d",[1/4,2/4,3/4,4/4,5/4,6/4,7/4,8/4,0,-1/4,-2/4,-3/4,-4/4,-5/4,-6/4,-7/4,-8/4]),h(q,"_gradient2d",[[-1,-1],[1,-1],[-1,1],[1,1],[0,-1],[-1,0],[0,1],[1,0]]),h(q,"_gradient3d",[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]]),h(q,"_gradient4d",[[1,1,0,0],[1,-1,0,0],[-1,1,0,0],[-1,-1,0,0],[1,0,1,0],[1,0,-1,0],[-1,0,1,0],[-1,0,-1,0],[1,0,0,1],[1,0,0,-1],[-1,0,0,1],[-1,0,0,-1],[0,1,1,0],[0,1,-1,0],[0,-1,1,0],[0,-1,-1,0],[0,1,0,1],[0,1,0,-1],[0,-1,0,1],[0,-1,0,-1],[0,0,1,1],[0,0,1,-1],[0,0,-1,1],[0,0,-1,-1]]);let W=q;class Ct{constructor(e){h(this,"canvas");h(this,"ctx");h(this,"requestNextAnimationFrameID",0);h(this,"_playing",!1);h(this,"_lastTimestamp",0);h(this,"backgroundColor","#000000");this.canvas=e,this.ctx=e.getContext("2d")}update(e){}render(e,t,s){}_tick(e){const t=this._lastTimestamp,s=e-t;this._lastTimestamp=e,this.tick(s),this.requestNextAnimationFrameID=window.requestAnimationFrame(n=>this._tick(n))}start(){this.requestNextAnimationFrameID=window.requestAnimationFrame(e=>this._tick(e)),this._playing=!0}stop(){window.cancelAnimationFrame(this.requestNextAnimationFrameID),this.requestNextAnimationFrameID=0,this._playing=!1}tick(e=0){this.update(e);const t=this.ctx,s=this.canvas;t.save(),t.clearRect(0,0,s.width,s.height),t.fillStyle=this.backgroundColor,t.fillRect(0,0,s.width,s.height),t.restore(),t.save(),this.render(s,t,e),t.restore()}get playing(){return this._playing}}class oe extends Ct{constructor(t,s,n){super(t);h(this,"_path",new Path2D);h(this,"_perlin",new W);h(this,"_amplitude");h(this,"_frequency");this._amplitude=s,this._frequency=n,this.calcPerlinPath()}calcPerlinPath(){const t=this.canvas,s=this._perlin,n=this._amplitude,r=this._frequency,a=new Path2D;a.moveTo(0,t.height/2);for(let l=0;l<t.width;l+=Math.random())a.lineTo(l,s.noise1d(l*r)*n+t.height/2);this._path=a}set amplitude(t){this._amplitude=t,this.calcPerlinPath()}set frequency(t){this._frequency=t,this.calcPerlinPath()}get amplitude(){return this._amplitude}get frequency(){return this._frequency}renderCrossLine(t,s){s.strokeStyle="rgba(78, 78, 78, 0.74)",s.lineWidth=1,s.moveTo(0,t.height/2),s.lineTo(t.width,t.height/2),s.stroke()}render(t,s){s.strokeStyle="rgba(255, 255, 255, 0.87)",s.lineWidth=2,s.stroke(this._path),this.renderCrossLine(t,s)}}const G=new oe(document.getElementById("noise1"),100,.02);G.tick();const Et=document.getElementById("noise1-amplitude");Et.value="100";const Ft=document.getElementById("noise1-frequency");Ft.value="0.02";const ie=document.getElementById("noise1-desc");function ht(){const o=G.amplitude,e=G.frequency,t=`perlin.noise1d : amplitude = ${o}, frequency = ${e}`;ie.textContent=t}ht();Et.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);G.amplitude=e??100,ht(),G.tick()});Ft.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);G.frequency=e,ht(),G.tick()});class re extends Ct{constructor(t,s){super(t);h(this,"_path",new Path2D);h(this,"_perlin",new W);h(this,"_options");this._options=s,this.calcPerlinPath()}calcPerlinPath(){const t=this.canvas,s=new Path2D,n=this._options,r=this._perlin,a=n.amplitude??1;s.moveTo(0,t.height/2);for(let l=0;l<t.width;l+=Math.random())s.lineTo(l,r.fractalNoise1d(l,n)*a+t.height/2);this._path=s}set options(t){this._options=t,this.calcPerlinPath()}get options(){return{...this._options}}renderCrossLine(t,s){s.strokeStyle="rgba(78, 78, 78, 0.74)",s.lineWidth=1,s.moveTo(0,t.height/2),s.lineTo(t.width,t.height/2),s.stroke()}render(t,s){s.strokeStyle="rgba(255, 255, 255, 0.87)",s.lineWidth=2,s.stroke(this._path),this.renderCrossLine(t,s)}}const V={amplitude:150,frequency:{x:1/100},octaves:3,persistence:.7,lacunarity:{x:1.5},offset:{x:.75}},H=new re(document.getElementById("fractal-noise1d"),V);H.tick();const ut={octaves:!1,amplitude:!1,frequency:!0,persistence:!1,lacunarity:!0,offset:!0},J={octaves:{min:1,max:10,value:V.octaves,step:1},amplitude:{min:1,max:225,value:V.amplitude,step:1},frequency:{min:0,max:10,value:V.frequency,step:.001},persistence:{min:0,max:10,value:V.persistence,step:.1},lacunarity:{min:0,max:10,value:V.lacunarity,step:.1},offset:{min:0,max:100,value:V.offset,step:.1}};function ae(){const o={},e=document.getElementById("fractal-noise1d-option-temp"),t=e.textContent;return Object.keys(ut).forEach(s=>{let n=t,r=J[s].value;ut[s]&&(r=J[s].value.x),n=n.replace(/\{name\}/g,s),n=n.replace("{min}",J[s].min),n=n.replace("{max}",J[s].max),n=n.replace(/\{value\}/g,r),n=n.replace("{step}",J[s].step);const a=document.createElement("div");a.innerHTML=n,e.parentNode.appendChild(a),o[s]=a}),o}const qt=ae();Object.keys(qt).forEach(o=>{const e=qt[o],t=e.querySelector(`#fractal-noise1d-${o}-value`);e.addEventListener("change",s=>{const n=Number.parseFloat(s.target.value);ut[o]?H.options={...H.options,[o]:{x:n}}:H.options={...H.options,[o]:n},t.textContent=`${n}`,H.tick()})});const ce=`#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

in vec4 vColor;
out vec4 fragColor;
void main(void) {
  fragColor = vColor;
}`,le=`#version 300 es
#ifdef GL_ES
precision mediump float;
#endif

in vec4 aVertexPosition;
in vec4 aVertexColor;
uniform mat4 uMvpMatrix;
out vec4 vColor;

void main(void) {
  gl_Position = uMvpMatrix * aVertexPosition;
  gl_PointSize = 1.0;
  vColor = aVertexColor;
}`;function xt(o,e,t){const[s,n,r,a,l,c,i,u,p,d,f,y,m,_,g,b]=o,[w,F,N,A,Z,S,D,I,T,k,Y,X,M,R,$,j]=e;t[0]=s*w+l*F+p*N+m*A,t[1]=n*w+c*F+d*N+_*A,t[2]=r*w+i*F+f*N+g*A,t[3]=a*w+u*F+y*N+b*A,t[4]=s*Z+l*S+p*D+m*I,t[5]=n*Z+c*S+d*D+_*I,t[6]=r*Z+i*S+f*D+g*I,t[7]=a*Z+u*S+y*D+b*I,t[8]=s*T+l*k+p*Y+m*X,t[9]=n*T+c*k+d*Y+_*X,t[10]=r*T+i*k+f*Y+g*X,t[11]=a*T+u*k+y*Y+b*X,t[12]=s*M+l*R+p*$+m*j,t[13]=n*M+c*R+d*$+_*j,t[14]=r*M+i*R+f*$+g*j,t[15]=a*M+u*R+y*$+b*j}class Q{constructor(e,t=le,s=ce){h(this,"_gl");h(this,"_program");h(this,"_requestNextAnimationFrameID",0);h(this,"_lastTimestamp",0);h(this,"_colorBuffer");h(this,"_positionBuffer");h(this,"_pointPositions");h(this,"_pointColors");h(this,"_glAttribLocations");h(this,"_glUniformLocations");h(this,"mvpMat",new Float32Array(16));h(this,"clearColor",[0,0,0,1]);h(this,"_eventQueue",{});h(this,"_playing",!1);this._canvas=e,this._vertexSource=t,this._fragmentSource=s,this._gl=this.createRenderingContext(),this._program=this.createShaderProgram(),this._gl.useProgram(this._program),this.initRenderingContext();const[n,r,a]=this.initMVPTransformation();xt(a,r,this.mvpMat),xt(this.mvpMat,n,this.mvpMat),this.viewportTransformation();const[l,c]=this.initWebGLLocations();this._glAttribLocations=l,this._glUniformLocations=c,this.uploadMVPToWebGL(),this.initBuffer(),this.setPositionAttribute(),this.setColorAttribute()}createRenderingContext(){const e=this._canvas.getContext("webgl2");if(e===null)throw new Error("WebGL 2.0 not supported");return e}initRenderingContext(){const e=this._gl;e.clearColor(...this.clearColor),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL)}createShaderProgram(){const e=this._gl,t=e.createProgram(),s=this.compileShader(e.VERTEX_SHADER,this._vertexSource),n=this.compileShader(e.FRAGMENT_SHADER,this._fragmentSource);if(e.attachShader(t,s),e.attachShader(t,n),e.linkProgram(t),e.getProgramParameter(t,e.LINK_STATUS)===!1)throw new Error(`Program link failed: ${e.getProgramInfoLog(t)}`);return t}compileShader(e,t){const s=this._gl,n=s.createShader(e);if(s.shaderSource(n,t),s.compileShader(n),s.getShaderParameter(n,s.COMPILE_STATUS)===!1)throw new Error(`Shader compile error: ${s.getShaderInfoLog(n)}`);return n}initMVPTransformation(){const e=this._canvas,t=new Float32Array([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,-1,1]].flat()),s=new Float32Array([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]].flat()),n=0,r=e.width,a=e.height,l=0,c=0,i=-1e3,u=new Float32Array([[2/(r-n),0,0,0],[0,2/(l-a),0,0],[0,0,-2/(c-i),0],[-(r+n)/(r-n),-(l+a)/(l-a),(c+i)/(c-i),1]].flat());return[t,s,u]}viewportTransformation(){const e=this._canvas;this._gl.viewport(0,0,e.width,e.height)}initWebGLLocations(){const e=this._gl,t=this._program,s={vertexPosition:e.getAttribLocation(t,"aVertexPosition"),vertexColor:e.getAttribLocation(t,"aVertexColor")},n={uMvpMatrix:e.getUniformLocation(t,"uMvpMatrix")};return[s,n]}uploadMVPToWebGL(){const{uMvpMatrix:e}=this._glUniformLocations;this._gl.uniformMatrix4fv(e,!1,this.mvpMat)}setPositionAttribute(){const e=this._gl,t=this._positionBuffer,s=this._glAttribLocations.vertexPosition,n=2,r=e.FLOAT,a=!1,l=0,c=0;e.bindBuffer(e.ARRAY_BUFFER,t),e.vertexAttribPointer(s,n,r,a,l,c),e.enableVertexAttribArray(s)}setColorAttribute(){const e=this._gl,t=this._colorBuffer,s=this._glAttribLocations.vertexColor,n=4,r=e.FLOAT,a=!1,l=0,c=0;e.bindBuffer(e.ARRAY_BUFFER,t),e.vertexAttribPointer(s,n,r,a,l,c),e.enableVertexAttribArray(s)}getPointPositions(){return[...this._pointPositions]}setPointPositions(e){const t=this._gl;this._pointPositions.set(e,0),t.bindBuffer(t.ARRAY_BUFFER,this._positionBuffer),t.bufferSubData(t.ARRAY_BUFFER,0,this._pointPositions)}getPointColors(){return[...this._pointColors]}setPointColors(e){const t=this._gl;t.bindBuffer(t.ARRAY_BUFFER,this._colorBuffer),this._pointColors.set(e,0),t.bufferSubData(t.ARRAY_BUFFER,0,this._pointColors)}initBuffer(){const e=this._canvas,t=this._gl;this._colorBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this._colorBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e.width*e.height*4),t.DYNAMIC_DRAW),this._pointColors=new Float32Array(e.height*e.width*4),this._positionBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this._positionBuffer),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e.width*e.height*2),t.DYNAMIC_DRAW),this._pointPositions=new Float32Array(e.height*e.width*2)}update(e){}render(e,t,s){}_tick(e){const t=this._lastTimestamp,s=e-t;this._lastTimestamp=e,this.tick(s),this._requestNextAnimationFrameID=window.requestAnimationFrame(n=>this._tick(n))}tick(e=0){this.update(e);const t=this._gl,s=this._canvas;this.clear(),this.render(s,t,e)}start(){this._requestNextAnimationFrameID=window.requestAnimationFrame(e=>this._tick(e)),this._playing=!0}stop(){window.cancelAnimationFrame(this._requestNextAnimationFrameID),this._requestNextAnimationFrameID=0,this._playing=!1}clear(){const e=this._gl;e.clearColor(...this.clearColor),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)}on(e,t){const s=this._eventQueue;s[e]==null&&(s[e]=[]),s[e].push(t)}emit(e,t){const s=this._eventQueue;s[e]!=null&&s[e].forEach(n=>n(t))}off(e,t){const s=this._eventQueue;s[e]!=null&&s[e].filter(n=>n!==t)}get playing(){return this._playing}}class ue extends Q{constructor(t,s,n){super(t);h(this,"_perlin",new W);h(this,"_frequencyY");h(this,"_frequencyX");h(this,"_postions",[]);h(this,"_colors",[]);this._frequencyX=s,this._frequencyY=n,this.calcNoise2D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}calcNoise2D(){const t=this._perlin,s=this._canvas,n=s.width,r=s.height,a=this._frequencyY,l=this._frequencyX,c=[],i=[];for(let u=0;u<n;u+=1)for(let p=0;p<r;p+=1){const d=t.noise2d(u*(256/n)*l,p*(256/r)*a);c.push(u,p);const f=(d+1)/2;i.push(f,f,f,1)}this._postions=c,this._colors=i}get frequencyY(){return this._frequencyY}set frequencyY(t){this._frequencyY=t,this.calcNoise2D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}get frequencyX(){return this._frequencyX}set frequencyX(t){this._frequencyX=t,this.calcNoise2D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}render(t,s){s.drawArrays(s.POINTS,0,this._postions.length/2)}}const U=new ue(document.getElementById("noise2"),1/24,1/36);U.tick();const Nt=document.getElementById("noise2-frequencyX");Nt.value=(1/24).toString();const zt=document.getElementById("noise2-frequencyY");zt.value=(1/36).toString();const he=document.getElementById("noise2-desc");function pt(){const o=U.frequencyX,e=U.frequencyY,t=`perlin.noise2d : frequencyX = ${o.toFixed(2)}, frequencyY = ${e.toFixed(2)}`;he.textContent=t}pt();Nt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);U.frequencyX=e,pt(),U.tick()});zt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);U.frequencyY=e,pt(),U.tick()});class pe extends Q{constructor(t,s){super(t);h(this,"_perlin",new W);h(this,"_postions",[]);h(this,"_colors",[]);h(this,"_options");this._options=s,this.calcFractalNoise2D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}calcFractalNoise2D(){const t=this._perlin,s=this._canvas,n=s.width,r=s.height,a=this._options,l=[],c=[];for(let i=0;i<n;i+=1)for(let u=0;u<r;u+=1){const p=t.fractalNoise2d(i*(256/n),u*(256/r),a);l.push(i,u);const d=(p+1)/2;c.push(d,d,d,1)}this._postions=l,this._colors=c}get options(){return this._options}set options(t){this._options=t,this.calcFractalNoise2D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}render(t,s){s.drawArrays(s.POINTS,0,this._postions.length/2)}}const B={amplitude:1,frequency:{x:.02,y:.015},octaves:5,persistence:.7,lacunarity:{x:2.5,y:2.6},offset:{x:.75,y:.9}},z=new pe(document.getElementById("fractal-noise2d"),B);z.tick();const tt={amplitude:{min:1,max:10,value:B.amplitude,step:1},octaves:{min:1,max:10,value:B.octaves,step:1},frequencyX:{min:.01,max:1,value:B.frequency.x,step:.01},frequencyY:{min:.01,max:1,value:B.frequency.y,step:.01},persistence:{min:0,max:10,value:B.persistence,step:.01},lacunarityX:{min:0,max:10,value:B.lacunarity.x,step:.01},lacunarityY:{min:0,max:10,value:B.lacunarity.y,step:.01},offsetX:{min:0,max:100,value:B.offset.x,step:.1},offsetY:{min:0,max:100,value:B.offset.y,step:.1}};function fe(){const o={},e=document.getElementById("fractal-noise2d-option-temp"),t=e.textContent;return Object.keys(tt).forEach(s=>{let n=t;const r=tt[s].value;n=n.replace(/\{name\}/g,s),n=n.replace("{min}",tt[s].min),n=n.replace("{max}",tt[s].max),n=n.replace(/\{value\}/g,r.toFixed(2)),n=n.replace("{step}",tt[s].step);const a=document.createElement("div");a.innerHTML=n,e.parentNode.appendChild(a),o[s]=a}),o}const bt=fe();Object.keys(bt).forEach(o=>{const e=bt[o],t=e.querySelector(`#fractal-noise2d-${o}-value`);e.addEventListener("change",s=>{const n=Number.parseFloat(s.target.value);if(["amplitude","octaves","persistence"].includes(o)&&(z.options={...z.options,[o]:n}),o.startsWith("frequency")){const r=o[o.length-1].toLowerCase();z.options={...z.options,frequency:{...z.options.frequency,[r]:n}}}if(o.startsWith("offset")){const r=o[o.length-1].toLowerCase();z.options={...z.options,offset:{...z.options.offset,[r]:n}}}if(o.startsWith("lacunarity")){const r=o[o.length-1].toLowerCase();z.options={...z.options,lacunarity:{...z.options.lacunarity,[r]:n}}}t.textContent=`${n}`,z.tick()})});class de extends Q{constructor(t,s,n,r){super(t);h(this,"_perlin",new W);h(this,"_frequencyY");h(this,"_frequencyX");h(this,"_frequencyZ");h(this,"_z",0);h(this,"_postions",[]);h(this,"_colors",[]);this._frequencyX=s,this._frequencyY=n,this._frequencyZ=r,this.calcNoise3D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}calcNoise3D(){const t=this._perlin,s=this._canvas,n=s.width,r=s.height,a=this._frequencyY,l=this._frequencyX,c=this._frequencyZ,i=this._z,u=this._postions,p=this._colors;let d=0,f=0;for(let y=0;y<n;y+=1)for(let m=0;m<r;m+=1){const _=t.noise3d(y*(256/n)*l,m*(256/r)*a,i*(256/r)*c);u[d++]=y,u[d++]=m;const g=(_+1)/2;p[f++]=g,p[f++]=g,p[f++]=g,p[f++]=1}}get frequencyY(){return this._frequencyY}set frequencyY(t){this._frequencyY=t,this.calcNoise3D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}get frequencyX(){return this._frequencyX}set frequencyX(t){this._frequencyX=t,this.calcNoise3D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}get frequencyZ(){return this._frequencyZ}set frequencyZ(t){this._frequencyZ=t,this.calcNoise3D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}get z(){return this._z}set z(t){this._z=t,this.calcNoise3D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}render(t,s){s.drawArrays(s.POINTS,0,this._postions.length/2),this.emit("rendered",this)}update(){this.z=this._z+1.13,this.z>600&&(this.z=0)}}const C=new de(document.getElementById("noise3"),1/40,1/50,1/10);C.tick();const Lt=document.getElementById("noise3-frequencyX");Lt.value=(1/24).toString();const At=document.getElementById("noise3-frequencyY");At.value=(1/36).toString();const Zt=document.getElementById("noise3-frequencyZ");Zt.value=(1/36).toString();const ft=document.getElementById("noise3-Z");ft.value="0";const ye=document.getElementById("noise3-play"),me=document.getElementById("noise3-desc");function K(){const o=C.frequencyX,e=C.frequencyY,t=C.frequencyZ,n=`perlin.noise3d : <br />z = ${C.z.toFixed(2)}, <br />frequencyX = ${o.toFixed(2)}, <br />frequencyY = ${e.toFixed(2)}<br /> frequencyZ = ${t.toFixed(2)}`;me.innerHTML=n}K();C.on("rendered",o=>{ft.value=o.z.toFixed(2),K()});Lt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);C.frequencyX=e,K(),C.tick()});At.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);C.frequencyY=e,K(),C.tick()});Zt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);C.frequencyZ=e,K(),C.tick()});ft.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);C.z=e,K(),C.tick()});ye.addEventListener("click",o=>{o.preventDefault();const e=o.target;C.playing?(e.textContent="Play-Z",C.stop(),C.tick()):(e.textContent="Stop",C.start())});class _e extends Q{constructor(t,s){super(t);h(this,"_perlin",new W);h(this,"_postions",[]);h(this,"_colors",[]);h(this,"_options");h(this,"_z",0);this._options=s,this.calcFractalNoise3D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}calcFractalNoise3D(){const t=this._perlin,s=this._canvas,n=s.width,r=s.height,a=this._options,l=this._postions,c=this._colors,i=this._z;let u=0,p=0;for(let d=0;d<n;d+=1)for(let f=0;f<r;f+=1){const y=t.fractalNoise3d(d*(256/n),f*(256/r),i*.4266666666666667,a);l[u++]=d,l[u++]=f;const m=(y+1)/2;c[p++]=m,c[p++]=m,c[p++]=m,c[p++]=1}}get z(){return this._z}set z(t){this._z=t,this.calcFractalNoise3D(),this.setPointColors(this._colors)}get options(){return this._options}set options(t){this._options=t,this.calcFractalNoise3D(),this.setPointColors(this._colors)}render(t,s){s.drawArrays(s.POINTS,0,this._postions.length/2),this.emit("rendered",this)}update(){this.playing&&(this.z=this._z+1.13,this.z>600&&(this.z=0))}}const L={amplitude:1,frequency:{x:.02,y:.015,z:.025},octaves:5,persistence:.7,lacunarity:{x:2.5,y:2.6,z:3},offset:{x:.75,y:.9,z:12.3}},P=new _e(document.getElementById("fractal-noise3d"),L);P.tick();const et={amplitude:{min:1,max:10,value:L.amplitude,step:1},octaves:{min:1,max:10,value:L.octaves,step:1},frequencyX:{min:.01,max:3,value:L.frequency.x,step:.01},frequencyY:{min:.01,max:3,value:L.frequency.y,step:.01},frequencyZ:{min:.01,max:3,value:L.frequency.z,step:.01},persistence:{min:0,max:10,value:L.persistence,step:.01},lacunarityX:{min:0,max:10,value:L.lacunarity.x,step:.01},lacunarityY:{min:0,max:10,value:L.lacunarity.y,step:.01},lacunarityZ:{min:0,max:10,value:L.lacunarity.z,step:.01},offsetX:{min:0,max:100,value:L.offset.x,step:.1},offsetY:{min:0,max:100,value:L.offset.y,step:.1},offsetZ:{min:0,max:100,value:L.offset.z,step:.1}};function ge(){const o={},e=document.getElementById("fractal-noise3d-option-temp"),t=e.textContent;return Object.keys(et).forEach(s=>{let n=t;const r=et[s].value;n=n.replace(/\{name\}/g,s),n=n.replace("{min}",et[s].min),n=n.replace("{max}",et[s].max),n=n.replace(/\{value\}/g,r.toFixed(2)),n=n.replace("{step}",et[s].step);const a=document.createElement("div");a.innerHTML=n,e.parentNode.appendChild(a),o[s]=a}),o}const wt=ge();Object.keys(wt).forEach(o=>{const e=wt[o],t=e.querySelector(`#fractal-noise3d-${o}-value`);e.addEventListener("change",s=>{const n=Number.parseFloat(s.target.value);if(["amplitude","octaves","persistence"].includes(o)&&(P.options={...P.options,[o]:n}),o.startsWith("frequency")){const r=o[o.length-1].toLowerCase();P.options={...P.options,frequency:{...P.options.frequency,[r]:n}}}if(o.startsWith("offset")){const r=o[o.length-1].toLowerCase();P.options={...P.options,offset:{...P.options.offset,[r]:n}}}if(o.startsWith("lacunarity")){const r=o[o.length-1].toLowerCase();P.options={...P.options,lacunarity:{...P.options.lacunarity,[r]:n}}}P.tick(),t.textContent=`${n}`})});const nt=document.getElementById("fractal-noise3-Z"),dt=document.getElementById("fractal-noise3d-Z-value");nt.value="0";dt.textContent="0";nt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);P.z=e,nt.value=e.toString(),dt.textContent=e.toFixed(2),P.tick()});const ve=document.getElementById("fractal-noise3-play");ve.addEventListener("click",o=>{o.preventDefault();const e=o.target;P.playing?(e.textContent="Play-Z",P.stop(),P.tick()):(e.textContent="Stop",P.start())});P.on("rendered",o=>{nt.value=o.z.toFixed(2),dt.textContent=o.z.toFixed(2)});class qe extends Q{constructor(t,s,n,r,a){super(t);h(this,"_perlin",new W);h(this,"_frequencyY");h(this,"_frequencyX");h(this,"_frequencyZ");h(this,"_frequencyW");h(this,"_z",0);h(this,"_w",0);h(this,"_postions",[]);h(this,"_colors",[]);h(this,"_playingZ",!1);h(this,"_playingW",!1);this._frequencyX=s,this._frequencyY=n,this._frequencyZ=r,this._frequencyW=a,this.calcNoise4D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}calcNoise4D(){const t=this._perlin,s=this._canvas,n=s.width,r=s.height,a=this._frequencyY,l=this._frequencyX,c=this._frequencyZ,i=this._frequencyW,u=this._z,p=this._w,d=this._postions,f=this._colors;let y=0,m=0;for(let _=0;_<n;_+=1)for(let g=0;g<r;g+=1){const b=t.noise4d(_*(256/n)*l,g*(256/r)*a,u*(256/r)*c,p*(256/n)*i);d[y++]=_,d[y++]=g;const w=(b+1)/2;f[m++]=w,f[m++]=w,f[m++]=w,f[m++]=1}}get frequencyY(){return this._frequencyY}set frequencyY(t){this._frequencyY=t,this.calcNoise4D(),this.setPointColors(this._colors)}get frequencyX(){return this._frequencyX}set frequencyX(t){this._frequencyX=t,this.calcNoise4D(),this.setPointColors(this._colors)}get frequencyZ(){return this._frequencyZ}set frequencyZ(t){this._frequencyZ=t,this.calcNoise4D(),this.setPointColors(this._colors)}get frequencyW(){return this._frequencyW}set frequencyW(t){this._frequencyW=t,this.calcNoise4D(),this.setPointColors(this._colors)}get z(){return this._z}set z(t){this._z=t,this.calcNoise4D(),this.setPointColors(this._colors)}get w(){return this._w}set w(t){this._w=t,this.calcNoise4D(),this.setPointColors(this._colors)}render(t,s){s.drawArrays(s.POINTS,0,this._postions.length/2),this.emit("rendered",this)}update(){this._playingZ&&(this.z=this._z+1.13,this.z>600&&(this.z=0)),this._playingW&&(this.w=this._w+1.13,this.w>600&&(this.w=0))}playZ(){super.stop(),this._playingZ=!0,this._playingW=!1,this.start(),this.emit("playingZ",this)}playW(){super.stop(),this._playingZ=!1,this._playingW=!0,this.start(),this.emit("playingW",this)}stop(){this._playingZ=!1,this._playingW=!1,super.stop(),this.emit("stopped",this)}get playingZ(){return this._playingZ}get playingW(){return this._playingW}}const v=new qe(document.getElementById("noise4"),1/40,1/50,1/10,1/10);v.tick();const St=document.getElementById("noise4-frequencyX");St.value=(1/40).toString();const Bt=document.getElementById("noise4-frequencyY");Bt.value=(1/50).toString();const Wt=document.getElementById("noise4-frequencyZ");Wt.value=(1/10).toString();const Dt=document.getElementById("noise4-frequencyW");Dt.value=(1/10).toString();const yt=document.getElementById("noise4-Z");yt.value="0";const mt=document.getElementById("noise4-W");mt.value="0";const rt=document.getElementById("noise4-playZ"),at=document.getElementById("noise4-playW"),xe=document.getElementById("noise4-desc");function O(){const o=v.frequencyX,e=v.frequencyY,t=v.frequencyZ,s=v.frequencyW,n=v.z,r=v.w;let a=`perlin.noise4d : <br />z = ${n.toFixed(2)}, `;a+=`<br />w = ${r.toFixed(2)}, `,a+=`<br />frequencyX = ${o.toFixed(2)}, `,a+=`<br />frequencyY = ${e.toFixed(2)}, `,a+=`<br /> frequencyZ = ${t.toFixed(2)}, `,a+=`<br /> frequencyW = ${s.toFixed(2)}`,xe.innerHTML=a}O();v.on("rendered",o=>{yt.value=o.z.toFixed(2),mt.value=o.w.toFixed(2),O()});St.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);v.frequencyX=e,O(),v.tick()});Bt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);v.frequencyY=e,O(),v.tick()});Wt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);v.frequencyZ=e,O(),v.tick()});Dt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);v.frequencyW=e,O(),v.tick()});yt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);v.z=e,O(),v.tick()});mt.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);v.w=e,O(),v.tick()});rt.addEventListener("click",o=>{o.preventDefault(),v.playingZ?(v.stop(),v.tick()):v.playZ()});at.addEventListener("click",o=>{o.preventDefault(),v.playingW?(v.stop(),v.tick()):v.playW()});v.on("playingZ",()=>{rt.textContent="Stop",at.textContent="Play-W"});v.on("playingW",()=>{at.textContent="Stop",rt.textContent="Play-Z"});v.on("stopped",()=>{at.textContent="Play-W",rt.textContent="Play-Z"});class be extends Q{constructor(t,s){super(t);h(this,"_perlin",new W);h(this,"_postions",[]);h(this,"_colors",[]);h(this,"_options");h(this,"_z",0);h(this,"_w",0);h(this,"_playingZ",!1);h(this,"_playingW",!1);this._options=s,this.calcFractalNoise4D(),this.setPointPositions(this._postions),this.setPointColors(this._colors)}calcFractalNoise4D(){const t=this._perlin,s=this._canvas,n=s.width,r=s.height,a=this._options,l=this._postions,c=this._colors,i=this._z,u=this._w;let p=0,d=0;for(let f=0;f<n;f+=1)for(let y=0;y<r;y+=1){const m=t.fractalNoise4d(f*(256/n),y*(256/r),i*.4266666666666667,u*.4266666666666667,a);l[p++]=f,l[p++]=y;const _=(m+1)/2;c[d++]=_,c[d++]=_,c[d++]=_,c[d++]=1}}get z(){return this._z}set z(t){this._z=t,this.calcFractalNoise4D(),this.setPointColors(this._colors)}get w(){return this._w}set w(t){this._w=t,this.calcFractalNoise4D(),this.setPointColors(this._colors)}get options(){return this._options}set options(t){this._options=t,this.calcFractalNoise4D(),this.setPointColors(this._colors)}render(t,s){s.drawArrays(s.POINTS,0,this._postions.length/2),this.emit("rendered",this)}update(){this._playingZ&&(this.z=this._z+1.13,this.z>600&&(this.z=0)),this._playingW&&(this.w=this._w+1.13,this.w>600&&(this.w=0))}playZ(){super.stop(),this._playingZ=!0,this._playingW=!1,this.start(),this.emit("playingZ",this)}playW(){super.stop(),this._playingZ=!1,this._playingW=!0,this.start(),this.emit("playingW",this)}stop(){this._playingZ=!1,this._playingW=!1,super.stop(),this.emit("stopped",this)}get playingZ(){return this._playingZ}get playingW(){return this._playingW}}const E={amplitude:1,frequency:{x:.02,y:.015,z:.025,w:.03},octaves:5,persistence:.7,lacunarity:{x:2.5,y:2.6,z:3,w:3},offset:{x:.75,y:.9,z:12.3,w:8.9}},x=new be(document.getElementById("fractal-noise4d"),E);x.tick();const st={amplitude:{min:1,max:10,value:E.amplitude,step:1},octaves:{min:1,max:10,value:E.octaves,step:1},frequencyX:{min:.01,max:3,value:E.frequency.x,step:.01},frequencyY:{min:.01,max:3,value:E.frequency.y,step:.01},frequencyZ:{min:.01,max:3,value:E.frequency.z,step:.01},frequencyW:{min:.01,max:3,value:E.frequency.w,step:.01},persistence:{min:0,max:10,value:E.persistence,step:.01},lacunarityX:{min:0,max:10,value:E.lacunarity.x,step:.01},lacunarityY:{min:0,max:10,value:E.lacunarity.y,step:.01},lacunarityZ:{min:0,max:10,value:E.lacunarity.z,step:.01},lacunarityW:{min:0,max:10,value:E.lacunarity.w,step:.01},offsetX:{min:0,max:100,value:E.offset.x,step:.1},offsetY:{min:0,max:100,value:E.offset.y,step:.1},offsetZ:{min:0,max:100,value:E.offset.z,step:.1},offsetW:{min:0,max:100,value:E.offset.w,step:.1}};function we(){const o={},e=document.getElementById("fractal-noise4d-option-temp"),t=e.textContent;return Object.keys(st).forEach(s=>{let n=t;const r=st[s].value;n=n.replace(/\{name\}/g,s),n=n.replace("{min}",st[s].min),n=n.replace("{max}",st[s].max),n=n.replace(/\{value\}/g,r.toFixed(2)),n=n.replace("{step}",st[s].step);const a=document.createElement("div");a.innerHTML=n,e.parentNode.appendChild(a),o[s]=a}),o}const Pt=we();Object.keys(Pt).forEach(o=>{const e=Pt[o],t=e.querySelector(`#fractal-noise4d-${o}-value`);e.addEventListener("change",s=>{const n=Number.parseFloat(s.target.value);if(["amplitude","octaves","persistence"].includes(o)&&(x.options={...x.options,[o]:n}),o.startsWith("frequency")){const r=o[o.length-1].toLowerCase();x.options={...x.options,frequency:{...x.options.frequency,[r]:n}}}if(o.startsWith("offset")){const r=o[o.length-1].toLowerCase();x.options={...x.options,offset:{...x.options.offset,[r]:n}}}if(o.startsWith("lacunarity")){const r=o[o.length-1].toLowerCase();x.options={...x.options,lacunarity:{...x.options.lacunarity,[r]:n}}}x.tick(),t.textContent=`${n}`})});const ot=document.getElementById("fractal-noise4-Z"),_t=document.getElementById("fractal-noise4d-Z-value");ot.value="0";_t.textContent="0";ot.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);x.z=e,ot.value=e.toString(),_t.textContent=e.toFixed(2),x.tick()});const it=document.getElementById("fractal-noise4-W"),gt=document.getElementById("fractal-noise4d-W-value");it.value="0";gt.textContent="0";it.addEventListener("change",o=>{const e=Number.parseFloat(o.target.value);x.w=e,it.value=e.toString(),gt.textContent=e.toFixed(2),x.tick()});const ct=document.getElementById("fractal-noise4-playZ"),lt=document.getElementById("fractal-noise4-playW");ct.addEventListener("click",o=>{o.preventDefault(),x.playingZ?(x.stop(),x.tick()):x.playZ()});lt.addEventListener("click",o=>{o.preventDefault(),x.playingW?(x.stop(),x.tick()):x.playW()});x.on("playingZ",()=>{ct.textContent="Stop",lt.textContent="Play-W"});x.on("playingW",()=>{lt.textContent="Stop",ct.textContent="Play-Z"});x.on("stopped",()=>{lt.textContent="Play-W",ct.textContent="Play-Z"});x.on("rendered",o=>{ot.value=o.z.toFixed(2),_t.textContent=o.z.toFixed(2),it.value=o.w.toFixed(2),gt.textContent=o.w.toFixed(2)});
